- have an early console also for serial (uart8250 in assembly, yuck)
- the kernel parameters are in boot.asm hard-coded, cannot be passed
  from outside
- test more A20 switching stuff on real hardware
- better detection of swapped disks (but do we want a special sector
  with disk 2 of 5? This is much harder to create)
- test other floppy sizes
- have a GOTO<n> marker to go to the next floppy <n>, this is useful
  for having for instance 2 floppies contain the kernel, then skip
  to floppy 3 and following for the ramdisk, so we can create 2 sets
  (boot and root floppies) and don't have to rebuild everything because
  one byte changes in the kernel or in the ramdisk
- have FLOPPY<n> markers which tell the boot loader, which flopy is
  currently inserted. This helps also to detetc out-of-order insersion
  of floppies (also add this detection code)
- have a ustar entry PARAMS, so we can set the boot parameters with
  a file instead of recompiling the boot image. This is also 1 block
  on the floppy which can be easily patched without having to redo
  the whole floppy write process.
- partiall filling of a floppy, have an <end of floppy marker>, handy
  for shacky media or drives which usually have a problem with the
  higher number sectors (ok, we should calibrate and fix the drive
  in this case probably)
